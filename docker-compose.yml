services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000" # Python backend
      - "5173:5173" # React dev server (assuming 5173 is the default port for your React app)
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/client/node_modules # This prevents overwriting node_modules with the host's
    networks:
      - app-network
    environment:
      - NODE_ENV=development

  postgres:
    image: postgres:17
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d prompt_notebook"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app-network

  redis:
    image: redis:6
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
